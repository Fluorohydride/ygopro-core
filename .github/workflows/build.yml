name: Automated Test Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-windows:
    runs-on: windows-2022

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download lua
      id: lua
      uses: mercury233/action-cache-download-file@v1.0.0
      with:
        url: https://www.lua.org/ftp/lua-5.4.7.tar.gz

    - name: Lua
      run: |
        mkdir lua
        tar -C lua -xzf ${{ steps.lua.outputs.filepath }}

    - name: Download premake
      id: premake
      uses: mercury233/action-cache-download-file@v1.0.0
      with:
        url: https://github.com/premake/premake-core/releases/download/v5.0.0-beta5/premake-5.0.0-beta5-windows.zip

    - name: Premake
      run: |
        mkdir premake-5
        tar -C premake-5 -xzf ${{ steps.premake.outputs.filepath }}
        copy premake\lua.lua lua\premake5.lua
        copy premake\dll.lua dll.lua
        .\premake-5\premake5.exe vs2022 --file=dll.lua

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build
      run: |
        msbuild build\ocgcoredll.sln /t:Build /p:"Configuration=Release;Platform=Win32"
        msbuild build\ocgcoredll.sln /t:Build /p:"Configuration=Release;Platform=x64"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        path: |
          build\bin\x32\Release\ocgcore.dll
          build\bin\x64\Release\ocgcore.dll

    - name: GitHub Release
      if: github.event_name == 'push'
      uses: salix5/action-automatic-releases@node20
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          build/bin/x64/Release/ocgcore.dll

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download lua
      id: lua
      uses: mercury233/action-cache-download-file@v1.0.0
      with:
        url: https://www.lua.org/ftp/lua-5.4.7.tar.gz

    - name: Lua
      run: |
        mkdir lua
        tar -C lua -xzf ${{ steps.lua.outputs.filepath }}

    - name: Download premake
      id: premake
      uses: mercury233/action-cache-download-file@v1.0.0
      with:
        url: https://github.com/premake/premake-core/releases/download/v5.0.0-beta5/premake-5.0.0-beta5-linux.tar.gz

    - name: Premake
      run: |
        mkdir premake-5
        tar -C premake-5 -xzf ${{ steps.premake.outputs.filepath }}
        cp premake/lua.lua lua/premake5.lua
        cp premake/dll.lua dll.lua
        chmod +x premake-5/premake5
        ./premake-5/premake5 gmake --file=dll.lua

    - name: Build
      run: |
        cd build
        make -j 4 config=release_x32
        make -j 4 config=release_x64
        cd ..

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        path: |
          build/bin/x32/Release/libocgcore.so
          build/bin/x64/Release/libocgcore.so